version: '3.8'

networks:
  prom_net:
    external: false
    name: prom_net
  web_net:
    external: true
    name: web_net

volumes:
  grafana_data:
    name: grafana_data
  prometheus_data:
    name: prometheus_data
  alertmanager_data:
    name: alertmanager_data
  pushgateway_data:
    name: pushgateway_data

services:
  prometheus:
    image: prom/prometheus:v2.37.1
    restart: always
    container_name: prometeheus
    volumes:
      - prometheus_data:/prometheus
      - ./prometheus:/etc/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention.time=30d'
      - '--storage.tsdb.retention.size=150GB'
      - '--web.enable-lifecycle'
    networks:
      web_net:
      prom_net:
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=web_net"
      - "traefik.http.routers.prometheus.entrypoints=http"
      - "traefik.http.routers.prometheus.rule=Host(`${PROSUB}.${DOMAIN_ADDRESS}`)"
      - "traefik.http.routers.prometheus.middlewares=https-redirect"
      - "traefik.http.middlewares.https-redirect.redirectscheme.scheme=https"
      - "traefik.http.routers.prometheus-secure.entrypoints=https"
      - "traefik.http.routers.prometheus-secure.rule=Host(`${PROSUB}.${DOMAIN_ADDRESS}`)"
      - "traefik.http.routers.prometheus-secure.tls=true"
      - "traefik.http.routers.prometheus-secure.tls.options=default"
      - "traefik.http.routers.prometheus-secure.middlewares=web-auth"
      - "traefik.http.routers.prometheus-secure.tls.certresolver=mycert"
      - "traefik.http.services.prometheus.loadbalancer.server.port=9090"

  grafana:
    image: grafana/grafana:9.1.5
    restart: always
    container_name: grafana
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/:/etc/grafana/provisioning/
    environment:
      - GF_SECURITY_ADMIN_USER=${GRAFANA_USERNAME}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD}
      - GF_SMTP_ENABLED=true
      #- GF_INSTALL_PLUGINS=${GRAFANA_INSTALL_PLUGINS}
      - GF_PATHS_PROVISIONING=/etc/grafana/provisioning
      - GF_PATHS_DATA=/var/lib/grafana
    networks:
      web_net:
      prom_net:
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=web_net"
      - "traefik.http.routers.grafana.entrypoints=http"
      - "traefik.http.routers.grafana.rule=Host(`${GRASUB}.${DOMAIN_ADDRESS}`)"
      - "traefik.http.routers.grafana.middlewares=https-redirect"
      - "traefik.http.middlewares.https-redirect.redirectscheme.scheme=https"
      - "traefik.http.routers.grafana-secure.entrypoints=https"
      - "traefik.http.routers.grafana-secure.rule=Host(`${GRASUB}.${DOMAIN_ADDRESS}`)"
      - "traefik.http.routers.grafana-secure.tls=true"
      - "traefik.http.routers.grafana-secure.tls.options=default"
      - "traefik.http.routers.grafana-secure.tls.certresolver=mycert"
      - "traefik.http.services.grafana.loadbalancer.server.port=3000"

  alertmanager:
    image: prom/alertmanager:v0.24.0
    restart: always
    container_name: alertmanager
    volumes:
      - alertmanager_data:/alertmanager
      - ./alertmanager:/etc/alertmanager
    command:
      - '--config.file=/etc/alertmanager/alertmanager.yml'
      - '--storage.path=/alertmanager'
    networks:
      web_net:
      prom_net:
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=web_net"
      - "traefik.http.routers.alert.entrypoints=http"
      - "traefik.http.routers.alert.rule=Host(`${ALESUB}.${DOMAIN_ADDRESS}`)"
      - "traefik.http.routers.alert.middlewares=https-redirect"
      - "traefik.http.middlewares.https-redirect.redirectscheme.scheme=https"
      - "traefik.http.routers.alert-secure.entrypoints=https"
      - "traefik.http.routers.alert-secure.rule=Host(`${ALESUB}.${DOMAIN_ADDRESS}`)"
      - "traefik.http.routers.alert-secure.tls=true"
      - "traefik.http.routers.alert-secure.tls.options=default"
      - "traefik.http.routers.alert-secure.middlewares=web-auth"
      - "traefik.http.routers.alert-secure.tls.certresolver=mycert"
      - "traefik.http.services.alert.loadbalancer.server.port=9093"

  pushgateway:
    image: prom/pushgateway:v1.4.3
    restart: always
    container_name: pushgateway
    command:
      - --persistence.file=/tmp/pushgateway.store
      - --persistence.interval=1m
    volumes:
      - pushgateway_data:/tmp/
    networks:
      web_net:
      prom_net:
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=web_net"
      - "traefik.http.routers.push.entrypoints=http"
      - "traefik.http.routers.push.rule=Host(`${PGWSUB}.${DOMAIN_ADDRESS}`)"
      - "traefik.http.routers.push.middlewares=https-redirect"
      - "traefik.http.middlewares.https-redirect.redirectscheme.scheme=https"
      - "traefik.http.routers.push-secure.entrypoints=https"
      - "traefik.http.routers.push-secure.rule=Host(`${PGWSUB}.${DOMAIN_ADDRESS}`)"
      - "traefik.http.routers.push-secure.tls=true"
      - "traefik.http.routers.push-secure.tls.options=default"
      - "traefik.http.routers.push-secure.middlewares=web-auth"
      - "traefik.http.routers.push-secure.tls.certresolver=mycert"
      - "traefik.http.services.push.loadbalancer.server.port=9091"

  cadvisor:
    image: gcr.io/cadvisor/cadvisor
    command: --disable_metrics=disk,udp,percpu,referenced_memory
    restart: always
    hostname: '${HOSTNAME}'
    container_name: cadvisor
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    networks:
      prom_net:

  blackbox-exporter:
    image: prom/blackbox-exporter:v0.22.0
    restart: always
    hostname: '${HOSTNAME}'
    container_name: blackbox-exporter
    command:
      - '--config.file=/etc/blackboxexporter/blackbox-exporter.yml'
    volumes:
      - ./blackbox:/etc/blackboxexporter
    networks:
      prom_net:

  node-exporter:
    image: prom/node-exporter:v1.3.1
    restart: always
    hostname: '${HOSTNAME}'
    container_name: node-exporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - --collector.filesystem.ignored-mount-points
      - "^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)"
      - --no-collector.powersupplyclass
    networks:
      prom_net:
