version: '3.7'

## By default this config uses default local driver,
## For custom volumes replace with volume driver configuration.
volumes:
  data1-1:
  data1-2:
  data2-1:
  data2-2:
  data3-1:
  data3-2:
  data4-1:
  data4-2:

networks:
  web_net:
    external: true
  app_net:
    external: false

# Settings and configurations that are common for all containers
x-minio-common: &minio-common
  image: quay.io/minio/minio:RELEASE.2023-09-16T01-01-47Z
  command: server --console-address ":9001" http://minio{1...4}/data{1...2}
  expose:
    - "9000"
    - "9001"
  environment:
    MINIO_ROOT_USER: ${MINIO_ROOT_USER}
    MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
  healthcheck:
    test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
    interval: 30s
    timeout: 20s
    retries: 3

# starts 4 docker containers running minio server instances.
# using nginx reverse proxy, load balancing, you can access
# it through port 9000.
services:
  minio1:
    <<: *minio-common
    hostname: minio1
    volumes:
      - data1-1:/data1
      - data1-2:/data2
    networks:
      - app_net

  minio2:
    <<: *minio-common
    hostname: minio2
    volumes:
      - data2-1:/data1
      - data2-2:/data2
    networks:
      - app_net

  minio3:
    <<: *minio-common
    hostname: minio3
    volumes:
      - data3-1:/data1
      - data3-2:/data2
    networks:
      - app_net

  minio4:
    <<: *minio-common
    hostname: minio4
    volumes:
      - data4-1:/data1
      - data4-2:/data2
    networks:
      - app_net

  nginx:
    image: nginx:1.19.2-alpine
    hostname: nginx
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "9000:9000"
      - "9001:9001"
    depends_on:
      - minio1
      - minio2
      - minio3
      - minio4
    networks:
      - app_net
      - web_net

    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=web_net"
      - "traefik.http.routers.minio.entrypoints=http"
      - "traefik.http.routers.minio.rule=Host(`${MINIO_SUB1}.${domain}`)"
      - "traefik.http.routers.minio.middlewares=https-redirect"
      - "traefik.http.middlewares.https-redirect.redirectscheme.scheme=https"
      - "traefik.http.routers.minio-secure.entrypoints=https"
      - "traefik.http.routers.minio-secure.rule=Host(`${MINIO_SUB1}.${domain}`)"
      - "traefik.http.routers.minio-secure.tls=true"
      - "traefik.http.routers.minio-secure.tls.options=default"
      - "traefik.http.routers.minio-secure.tls.certresolver=mycert"
      - "traefik.http.routers.minio-secure.service=minio"
      - "traefik.http.services.minio.loadbalancer.server.port=9001"
      - "traefik.http.routers.minio-api.entrypoints=http"
      - "traefik.http.routers.minio-api.rule=Host(`${MINIO_SUB2}.${domain}`)"
      - "traefik.http.routers.minio-api.middlewares=https-redirect"
      - "traefik.http.routers.minio-api-secure.entrypoints=https"
      - "traefik.http.routers.minio-api-secure.rule=Host(`${MINIO_SUB2}.${domain}`)"
      - "traefik.http.routers.minio-api-secure.tls=true"
      - "traefik.http.routers.minio-api-secure.tls.options=default"
      - "traefik.http.routers.minio-api-secure.tls.certresolver=mycert"
      - "traefik.http.routers.minio-api-secure.service=minio-api"
      - "traefik.http.services.minio-api.loadbalancer.server.port=9000"


